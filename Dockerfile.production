# Creating multi-stage build for production
FROM node:20.10-alpine AS build
RUN apk update && apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev vips-dev git > /dev/null 2>&1
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

WORKDIR /opt/edm-server/
COPY package.json package-lock.json ./
RUN npm config set unsafe-perm true
RUN npm install -g node-gyp
RUN npm config set fetch-retry-maxtimeout 600000 -g && npm ci --only=production --unsafe-perm=true --allow-root
ENV PATH /opt/edm-server/node_modules/.bin:$PATH
WORKDIR /opt/edm-server
COPY . .
RUN npm run build

# Creating final production image
FROM node:20.10-alpine
RUN apk add --no-cache vips-dev
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
WORKDIR /opt/edm-server/
COPY --from=build /opt/edm-server/node_modules ./node_modules
WORKDIR /opt/edm-server
COPY --from=build /opt/edm-server ./
ENV PATH /opt/edm-server/node_modules/.bin:$PATH

RUN chown -R node /opt/edm-server
USER node
EXPOSE 1337
CMD ["npm", "run", "start"]
